{"version":3,"sources":["components/Navbar.js","components/Social.js","components/Home.js","components/Contact.js","components/Writing.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","Social","href","target","rel","src","alt","Home","Contact","class","title","width","height","frameborder","marginheight","marginwidth","Writing","List","list","map","item","ListItem","key","id","link","outlet","App","exact","path","component","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2PAYeA,EATA,WACX,OACI,yBAAKC,UAAY,UACb,yBAAKA,UAAU,eAAc,kBAAC,IAAD,CAAMC,GAAG,KAAT,cAC7B,yBAAKD,UAAU,eAAc,kBAAC,IAAD,CAASC,GAAG,YAAZ,YAC7B,yBAAKD,UAAU,eAAc,kBAAC,IAAD,CAASC,GAAG,YAAZ,c,OCI1BC,EATA,WACX,OACI,yBAAKF,UAAU,mBACX,yBAAKA,UAAU,UAAS,uBAAGG,KAAK,gCAAgCC,OAAO,SAASC,IAAI,uBAAsB,yBAAKC,IAAI,cAAcC,IAAI,cACrI,yBAAKP,UAAU,UAAS,uBAAGG,KAAK,wCAAwCC,OAAO,SAASC,IAAI,uBAAsB,yBAAKC,IAAI,gBAAgBC,IAAI,gBAC/I,yBAAKP,UAAU,UAAS,kBAAC,IAAD,CAAMC,GAAG,YAAW,yBAAKK,IAAI,YAAYC,IAAI,gBCalEC,EAlBF,WACT,OACI,yBAAKR,UAAU,oBACX,yBAAKA,UAAU,aACX,yBAAKM,IAAI,aAAaC,IAAI,WAE9B,yBAAKP,UAAU,eACX,yBAAKA,UAAU,YACX,sGACA,wRACA,yIAA8G,uBAAGG,KAAK,gCAAR,oBAElH,kBAAC,EAAD,SCLDM,EARC,WACZ,OACI,yBAAKC,MAAM,WACP,4BAAQJ,IAAI,oHAAoHK,MAAM,aAAaC,MAAM,OAAOC,OAAO,MAAMC,YAAY,IAAIC,aAAa,IAAIC,YAAY,KAA1N,mBCoCGC,MAvCd,WAEG,IAeMC,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACT,6BACCA,EAAKC,KAAI,SAAAC,GAAI,OACV,kBAACC,EAAD,CAAUC,IAAKF,EAAKG,GAAIH,KAAMA,SAKlCC,EAAW,SAAC,GAAD,IAAGD,EAAH,EAAGA,KAAH,OACb,6BACA,2BAAG,uBAAGlB,KAAOkB,EAAKI,MAAQJ,EAAKV,OAA/B,KAA4CU,EAAKK,OAAjD,OAIF,OACA,yBAAK1B,UAAU,gBACX,uCACA,kBAACkB,EAAD,CAAMC,KAhCG,CACT,CACAK,GAAI,IACJb,MAAO,8DACPe,OAAQ,WACRD,KAAM,MAEN,CACAD,GAAI,IACJb,MAAO,gEACPe,OAAQ,iBACRD,KAAM,WCOCE,E,uKAbX,OACE,kBAAC,IAAD,KACE,yBAAK3B,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAO4B,OAAK,EAACC,KAAO,IAAIC,UAActB,IACtC,kBAAC,IAAD,CAAOqB,KAAO,WAAWC,UAAcb,IACvC,kBAAC,IAAD,CAAOY,KAAO,WAAWC,UAAcrB,U,GAR/BsB,aCKEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.8e79061e.chunk.js","sourcesContent":["import React from 'react'\nimport { Link, NavLink} from 'react-router-dom'\n\nconst Navbar = () => {\n    return (\n        <div className = \"header\">\n            <div className=\"header-name\"><Link to=\"/\">Emily Gao</Link></div>\n            <div className=\"header-item\"><NavLink to=\"/writing\">Writing</NavLink></div>\n            <div className=\"header-item\"><NavLink to=\"/contact\">Contact</NavLink></div>\n        </div>\n    )\n}\nexport default Navbar","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Social = () => {\n    return (\n        <div className=\"contact-widgets\">\n            <div className=\"widget\"><a href=\"https://twitter.com/emilyqgao\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"twitter.png\" alt=\"Twitter\"></img></a></div>\n            <div className=\"widget\"><a href=\"https://www.instagram.com/doyoucanoe/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"instagram.png\" alt=\"Instagram\"></img></a></div>\n            <div className=\"widget\"><Link to=\"/contact\"><img src=\"email.png\" alt=\"Contact\"></img></Link></div>\n        </div>\n    )\n}\nexport default Social","import React from 'react'\nimport Social from './Social'\n\nconst Home = () => {\n    return (\n        <div className=\"homepage-content\">\n            <div className=\"bio-image\">\n                <img src=\"biopic.JPG\" alt=\"Emily\"></img>\n            </div>\n            <div className=\"bio-textbox\">\n                <div className=\"bio-text\">\n                    <p>Emily Gao is a humor writer and product manager based in New York City.</p>\n                    <p>Emily enjoys writing about the tech industry and the mundane horrors of the workplace, drawing from her experience as a corporate drone. She is a graduate of the University of Pennsylvania and has studied at the Second City, Magnet Theater, and UCB.</p>\n                    <p>Like a good Millennial, Emily has many side hustles. She sells hats that say HAT through her online store, <a href=\"https://www.pithyapparel.com\">Pithy Apparel.</a></p>\n                </div>\n                <Social />\n            </div>\n        </div>\n    )\n}\n\nexport default Home","import React from 'react'\n\nconst Contact = () => {\n    return (\n        <div class=\"content\">\n            <iframe src=\"https://docs.google.com/forms/d/e/1FAIpQLSf3sP7E1XZ4AELScqpa23NgPm7x8wKZqtKwoFHOU9OngfPvgg/viewform?embedded=true\" title=\"Contact Me\" width=\"100%\" height=\"800\" frameborder=\"0\" marginheight=\"0\" marginwidth=\"0\">Loadingâ€¦</iframe>\n        </div>\n    )\n}\n\nexport default Contact","import React from 'react'\n\n function Writing () {\n\n    const list = [\n        {\n        id: '1',\n        title: 'Elite Serfdom Opportunity for Best-In-Class Peasant Farmers',\n        outlet: 'Slackjaw',\n        link: null,\n        },\n        {\n        id: '2',\n        title: 'Learning To Cook (And Express Your Despair) During Quarantine',\n        outlet: 'The Belladonna',\n        link: null,\n        },\n    ];\n       \n    const List = ({ list }) => (\n        <div>\n        {list.map(item => (\n            <ListItem key={item.id} item={item} />\n        ))}\n        </div>\n    );\n   \n  const ListItem = ({ item }) => (\n      <div>\n      <p><a href={ item.link }>{item.title}</a> ({item.outlet})</p>\n      </div>\n  );\n\n    return (\n    <div className=\"page-content\">\n        <h4>Writing</h4>\n        <List list={list} />\n        </div>\n         )\n     }\n\nexport default Writing","import React, { Component } from 'react'\nimport Navbar from './components/Navbar'\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport Home from './components/Home'\nimport Contact from './components/Contact'\nimport Writing from './components/Writing'\n\nclass App extends Component {\n    render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar / >\n          <Route exact path = '/' component = { Home } />\n          <Route path = '/writing' component = { Writing } />\n          <Route path = '/contact' component = { Contact } />\n        </div>\n      </BrowserRouter>\n    );\n    }\n  }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}